apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dao-governance-elasticsearch
  labels:
    app: dao-governance
    component: elasticsearch
spec:
  serviceName: dao-governance-elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: dao-governance
      component: elasticsearch
  template:
    metadata:
      labels:
        app: dao-governance
        component: elasticsearch
    spec:
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        env:
        - name: cluster.name
          value: dao-governance-cluster
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: discovery.type
          value: single-node
        - name: ES_JAVA_OPTS
          value: "-Xms512m -Xmx512m"
        - name: xpack.security.enabled
          value: "false"
        volumeMounts:
        - name: elasticsearch-data
          mountPath: /usr/share/elasticsearch/data
        readinessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 60
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /_cluster/health
            port: 9200
          initialDelaySeconds: 120
          timeoutSeconds: 30
      volumes:
      - name: elasticsearch-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: dao-governance-elasticsearch
  labels:
    app: dao-governance
    component: elasticsearch
spec:
  selector:
    app: dao-governance
    component: elasticsearch
  ports:
  - name: http
    port: 9200
    targetPort: 9200
  - name: transport
    port: 9300
    targetPort: 9300
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dao-governance-kibana
  labels:
    app: dao-governance
    component: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dao-governance
      component: kibana
  template:
    metadata:
      labels:
        app: dao-governance
        component: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.5.0
        ports:
        - containerPort: 5601
          name: http
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        env:
        - name: ELASTICSEARCH_HOSTS
          value: http://dao-governance-elasticsearch:9200
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 60
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 120
          timeoutSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: dao-governance-kibana
  labels:
    app: dao-governance
    component: kibana
spec:
  selector:
    app: dao-governance
    component: kibana
  ports:
  - name: http
    port: 5601
    targetPort: 5601
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dao-governance-logstash
  labels:
    app: dao-governance
    component: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dao-governance
      component: logstash
  template:
    metadata:
      labels:
        app: dao-governance
        component: logstash
    spec:
      containers:
      - name: logstash
        image: docker.elastic.co/logstash/logstash:8.5.0
        ports:
        - containerPort: 5044
          name: beats
        - containerPort: 9600
          name: monitoring
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        env:
        - name: LS_JAVA_OPTS
          value: "-Xmx256m -Xms256m"
        volumeMounts:
        - name: logstash-config
          mountPath: /usr/share/logstash/pipeline
        readinessProbe:
          httpGet:
            path: /
            port: 9600
          initialDelaySeconds: 60
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /
            port: 9600
          initialDelaySeconds: 120
          timeoutSeconds: 30
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-config
---
apiVersion: v1
kind: Service
metadata:
  name: dao-governance-logstash
  labels:
    app: dao-governance
    component: logstash
spec:
  selector:
    app: dao-governance
    component: logstash
  ports:
  - name: beats
    port: 5044
    targetPort: 5044
  - name: monitoring
    port: 9600
    targetPort: 9600
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config
  labels:
    app: dao-governance
    component: logstash
data:
  logstash.conf: |
    input {
      beats {
        port => 5044
      }
    }
    
    filter {
      if [kubernetes] {
        if [kubernetes][namespace] == "dao-governance-prod" or [kubernetes][namespace] == "dao-governance-staging" {
          mutate {
            add_field => { "[@metadata][target_index]" => "dao-governance-%{+YYYY.MM.dd}" }
          }
        }
      }
    }
    
    output {
      elasticsearch {
        hosts => ["dao-governance-elasticsearch:9200"]
        index => "%{[@metadata][target_index]}"
      }
    }
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: dao-governance-filebeat
  labels:
    app: dao-governance
    component: filebeat
spec:
  selector:
    matchLabels:
      app: dao-governance
      component: filebeat
  template:
    metadata:
      labels:
        app: dao-governance
        component: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:8.5.0
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 200m
            memory: 200Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: filebeat-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      - name: data
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  labels:
    app: dao-governance
    component: filebeat
data:
  filebeat.yml: |
    filebeat.inputs:
    - type: container
      paths:
        - /var/log/containers/*.log
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
    
    processors:
      - add_cloud_metadata:
      - add_host_metadata:
    
    output.logstash:
      hosts: ["dao-governance-logstash:5044"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  labels:
    app: dao-governance
    component: filebeat
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    app: dao-governance
    component: filebeat
rules:
- apiGroups: [""]
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
  labels:
    app: dao-governance
    component: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: default
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io 